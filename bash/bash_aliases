#!/usr/bin/env bash

DOTFILES="${HOME}/.dotfiles"

eval "$(chef shell-init bash)"

if [[ -d "${DOTFILES}"/bash/extras ]]; then
  for file in "${DOTFILES}"/bash/extras/*; do
    source "${file}"
  done
fi

# Put the bin/ directories first on the path
export PATH="${DOTFILES}/bin:${DOTFILES}/local/bin:${PATH}"

# enable color support
[[ -f ~/.dircolors ]] && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"

alias_files=($(find -L "${DOTFILES}" -name aliases.bash))
for file in ${alias_files}; do
  . "${file}"
done
unset alias_files

linux_alias_files=($(find -L "${DOTFILES}" -name aliases.linux.bash))
for file in ${linux_alias_files}; do
  . "${file}"
done
unset linux_alias_files

function lattice() {
    local command=$1
    local latticeDirectory="/home/shannon/opt/lattice-bundle-v0.6.0"
    local originalDirectory=$(pwd)
    case $command in
        status)    cd "${latticeDirectory}/vagrant/"
                   vagrant status
        ;;
        start)     cd "${latticeDirectory}/vagrant/"
                   vagrant up
        ;;
        stop)      cd "${latticeDirectory}/vagrant/"
                   vagrant destroy --force
        ;;
        restart)   cd "${latticeDirectory}/vagrant/"
                   vagrant destroy --force
                   vagrant up
        ;;
        fixpath)   if [ "$(which ltc)" != "" ]; then
                       echo "ltc is already configured."
                   else 
                       export PATH=~/opt/ltc/:$PATH
                   fi
        ;;
        *)         echo "Usage: lattice (status|start|stop|restart|fixpath|upgrade)"
                   return 1
        ;;
    esac
    cd $originalDirectory
}
